
export default {
  '/src/utils/request.js': 
    {
      code: decodeURIComponent(`import%20axios%20from%20'axios'%0Aimport%20%7B%20MessageBox%2C%20Message%20%7D%20from%20'element-ui'%0A%2F%2F%20import%20store%20from%20'%40%2Fstore'%0A%2F%2F%20import%20%7B%20getToken%20%7D%20from%20'%40%2Futils%2Fauth'%0A%0A%2F%2F%20create%20an%20axios%20instance%0Aconst%20service%20%3D%20axios.create(%7B%0A%20%20baseURL%3A%20process.env.VUE_APP_BASE_API%2C%20%2F%2F%20url%20%3D%20base%20url%20%2B%20request%20url%0A%20%20%2F%2F%20withCredentials%3A%20true%2C%20%2F%2F%20send%20cookies%20when%20cross-domain%20requests%0A%20%20timeout%3A%205000%20%2F%2F%20request%20timeout%0A%7D)%0A%0A%2F%2F%20request%20interceptor%0Aservice.interceptors.request.use(%0A%20%20config%20%3D%3E%20%7B%0A%20%20%20%20%2F%2F%20do%20something%20before%20request%20is%20sent%0A%0A%20%20%20%20%2F%2F%20if%20(store.getters.token)%20%7B%0A%20%20%20%20%2F%2F%20%20%20%2F%2F%20let%20each%20request%20carry%20token%0A%20%20%20%20%2F%2F%20%20%20%2F%2F%20%5B'X-Token'%5D%20is%20a%20custom%20headers%20key%0A%20%20%20%20%2F%2F%20%20%20%2F%2F%20please%20modify%20it%20according%20to%20the%20actual%20situation%0A%20%20%20%20%2F%2F%20%20%20config.headers%5B'X-Token'%5D%20%3D%20getToken()%0A%20%20%20%20%2F%2F%20%7D%0A%20%20%20%20return%20config%0A%20%20%7D%2C%0A%20%20error%20%3D%3E%20%7B%0A%20%20%20%20%2F%2F%20do%20something%20with%20request%20error%0A%20%20%20%20console.log(error)%20%2F%2F%20for%20debug%0A%20%20%20%20return%20Promise.reject(error)%0A%20%20%7D%0A)%0A%0A%2F%2F%20response%20interceptor%0Aservice.interceptors.response.use(%0A%20%20%2F**%0A%20%20%20*%20If%20you%20want%20to%20get%20http%20information%20such%20as%20headers%20or%20status%0A%20%20%20*%20Please%20return%20%20response%20%3D%3E%20response%0A%20%20*%2F%0A%0A%20%20%2F**%0A%20%20%20*%20Determine%20the%20request%20status%20by%20custom%20code%0A%20%20%20*%20Here%20is%20just%20an%20example%0A%20%20%20*%20You%20can%20also%20judge%20the%20status%20by%20HTTP%20Status%20Code%0A%20%20%20*%2F%0A%20%20response%20%3D%3E%20%7B%0A%20%20%20%20const%20res%20%3D%20response.data%0A%0A%20%20%20%20%2F%2F%20if%20the%20custom%20code%20is%20not%2020000%2C%20it%20is%20judged%20as%20an%20error.%0A%20%20%20%20if%20(res.code%20!%3D%3D%2020000)%20%7B%0A%20%20%20%20%20%20Message(%7B%0A%20%20%20%20%20%20%20%20message%3A%20res.message%20%7C%7C%20'Error'%2C%0A%20%20%20%20%20%20%20%20type%3A%20'error'%2C%0A%20%20%20%20%20%20%20%20duration%3A%205%20*%201000%0A%20%20%20%20%20%20%7D)%0A%0A%20%20%20%20%20%20%2F%2F%2050008%3A%20Illegal%20token%3B%2050012%3A%20Other%20clients%20logged%20in%3B%2050014%3A%20Token%20expired%3B%0A%20%20%20%20%20%20if%20(res.code%20%3D%3D%3D%2050008%20%7C%7C%20res.code%20%3D%3D%3D%2050012%20%7C%7C%20res.code%20%3D%3D%3D%2050014)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20to%20re-login%0A%20%20%20%20%20%20%20%20MessageBox.confirm('You%20have%20been%20logged%20out%2C%20you%20can%20cancel%20to%20stay%20on%20this%20page%2C%20or%20log%20in%20again'%2C%20'Confirm%20logout'%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20confirmButtonText%3A%20'Re-Login'%2C%0A%20%20%20%20%20%20%20%20%20%20cancelButtonText%3A%20'Cancel'%2C%0A%20%20%20%20%20%20%20%20%20%20type%3A%20'warning'%0A%20%20%20%20%20%20%20%20%7D).then(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20store.dispatch('user%2FresetToken').then(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20location.reload()%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20%7D)%0A%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20Promise.reject(new%20Error(res.message%20%7C%7C%20'Error'))%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20return%20res%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20error%20%3D%3E%20%7B%0A%20%20%20%20console.log('err'%20%2B%20error)%20%2F%2F%20for%20debug%0A%20%20%20%20Message(%7B%0A%20%20%20%20%20%20message%3A%20error.message%2C%0A%20%20%20%20%20%20type%3A%20'error'%2C%0A%20%20%20%20%20%20duration%3A%205%20*%201000%0A%20%20%20%20%7D)%0A%20%20%20%20return%20Promise.reject(error)%0A%20%20%7D%0A)%0A%0Aexport%20default%20service%0A`)
    }    
  
}